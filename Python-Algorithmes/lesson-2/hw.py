# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# Числа и знак операции вводятся пользователем.
# После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений.
# Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
# Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
# снова запрашивать знак операции. Также сообщать пользователю о невозможности деления на ноль,
# если он ввел 0 в качестве делителя.
def func1():
    modes = ('0', '+', '-', '*', '/')
    while True:
        num1 = int(input('Введите первое число: '))
        mode = input('Введите действие: ')
        while True:
            if mode not in modes:
                mode = input('Введен неверный знак. Введите действие: ')
            else:
                break
        if mode == '0':
            break
        num2 = int(input('Введите второе число: '))
        if mode == '/' and num2 == 0:
            print('Нельзя делить на ноль.')
            continue
        result = None
        if mode == '+':
            result = num1 + num2
        elif mode == '-':
            result = num1 - num2
        elif mode == '*':
            result = num1 * num2
        elif mode == '/':
            result = num1 / num2
        print(f'{num1} {mode} {num2} = {result}')


# 2. Посчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
def func2():
    num = input('Введите число: ')
    even = 0
    odd = 0
    for char in num:
        if int(char) % 2 == 0:
            even += 1
        else:
            odd += 1
    print(f'Четные цифры: {even}.\nНечетные цифры: {odd}')


# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.
def func3():
    num = input('Введите число: ')
    print(f'{num[::-1]}')


# 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...
# Количество элементов (n) вводится с клавиатуры.
def func4():
    num = int(input('Введите количество элементов: '))
    sum = 0
    for i in range(1, num + 1):
        sum = sum + (-0.5)**(i - 1)
    print(sum)


# 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.
def func5():
    for i in range(32, 127 + 1, 10):
        print(' '.join([f'{s}:"{chr(s)}"' for s in range(i, min(127 + 1, i+10))]))


# 6. В программе генерируется случайное целое число от 0 до 100.
# Пользователь должен его отгадать не более чем за 10 попыток.
# После каждой неудачной попытки должно сообщаться больше или меньше
# введенное пользователем число, чем то, что загадано.
# Если за 10 попыток число не отгадано, то вывести загаданное число.
from random import randint
def func6():
    target = randint(0, 100)
    print('Заладано число от 0 до 100, попробуйте отгадать.')
    for i in range(1, 11):
        num = int(input(f'Попытка {i}. Введите число: '))
        if num == target:
            print(f'Вы отгадали число! Загадано было: {target}')
            break
        if num < target:
            print(f'Число {num} меньше загадонного.')
        else:
            print(f'Число {num} больше загадонного.')
    else:
        print(f'Вы проиграли. Загадонное число: {target}')


# 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство:
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.
def func7():
    n = randint(1, 1000000)
    sum = 0
    for i in range(1, n + 1):
        sum = sum + i
    if not(sum == n * (n + 1) / 2):
        print(f'Вы сломали математику! Случайное число: {n}')
    else:
        print(f'Случайное число: {n}, сумма: {sum} совпадает с вычисленной по формуле.')


# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
def func8():
    seq = []
    n = int(input('Введите количество вводимых чисел: '))
    for i in range(1, n + 1):
        seq.append(input('Введите число: '))
    target = input('Введите искомую цифру: ')
    sum = 0
    for i in seq:
        sum = sum + i.count(target)
    print(f'Искомая цифра встретилась {sum} раз.')


# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр.
# Вывести на экран это число и сумму его цифр.
def func9():
    num = ''
    sum = 0
    while True:
        s = 0
        n = input('Введите число. 0 для завершения: ')
        if n == '0':
            break
        for i in n:
            s = s + int(i)
        if s > sum:
            sum = s
            num = n
    print(f'Наибольшее по сумме цифр число: {num}. Сумма цифр: {sum}')
